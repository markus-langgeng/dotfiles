#!/bin/sh

set -o vi
stty -ixon

if [ $(id -u) == 0 ]; then
    PS1="\[\e[1;34m\][\[\e[1;91m\]\u\[\e[35m\]@\[\e[1;35m\]\h \[\e[1;33m\]\W\[\e[1;34m\]]#\[\e[0;m\] "
else
    PS1="\[\e[1;34m\][\[\e[1;33m\]\u\[\e[35m\]@\[\e[1;35m\]\h \[\e[1;33m\]\W\[\e[1;34m\]]$\[\e[0;m\] "
fi

alias su="doas -s"
alias dfs='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
alias cp="cp -i"
alias mv="mv -i"
alias rm="rm -i"
alias rsync="rsync -vrPlu"
alias mkdir="mkdir -p"
alias df="df -h"
alias trp="trash-put"
alias trl="trash-list"
alias trr="trash-restore"

alias ls="ls -h --color=always --group-directories-first"
alias grep="grep --color=auto"
alias ip="ip -color=auto"

alias ka="killall"
alias e="$EDITOR"
alias v="$EDITOR"
alias vi="$EDITOR"
alias z="zathura"
alias g="git"
alias xdg-qf="xdg-mime query filetype"
alias xdg-qd="xdg-mime query default"
alias xdg-def="xdg-mime default"
alias adb='HOME="$XDG_DATA_HOME"/android adb'
alias lofi="setsid -f mpv --no-video --no-resume-playback 'https://www.youtube.com/watch?v=jfKfPfyJRdk'"
alias rekeyd="doas cp $HOME/.config/my_keyd.conf /etc/keyd/default.conf && doas keyd reload"
alias apk-search-edge="doas apk -X https://dl-cdn.alpinelinux.org/alpine/edge/community search"
alias apk-add-edge="doas apk -X https://dl-cdn.alpinelinux.org/alpine/edge/community add"

. "/home/kuss/.local/share/cargo/env"

mkcd() { mkdir -pv "$1" && cd "$1" || exit; }
mvcd() { mv -vi "$1" "$2" && cd "$2" || exit; }

f() {
	usage() {
		cat <<- EOF
		Usage: f [directory_path/] [-f|-d][o|y]
			-f Get type file
			-d Get type dir
			Both accepts mandatory arguments: o (open) or y (yank)
		EOF
	}

	echo "$1" | grep -q "^-" && echo "First argument is not flag!" && usage && return
	if [ -d "$1" ]; then
		path="$1"
	else
		case "$1" in
			1 ) path="$HOME/kuliah/semester_1/" ;;
			2 ) path="$HOME/kuliah/semester_2/" ;;
			3 ) path="$HOME/kuliah/semester_3/" ;;
			4 ) path="$HOME/kuliah/semester_4/" ;;
			b ) path="$HOME/personal/buku"      ;;
			c ) path="$XDG_CONFIG_HOME"         ;;
			d ) path="$HOME/downloads/"         ;;
			f ) path="$XDG_DATA_HOME/fonts/"    ;;
			h ) path="$HOME/hsk/"               ;;
			k ) path="$HOME/kuliah/"            ;;
			m ) path="$HOME/music/"             ;;
			s ) path="$XDG_DATA_HOME"           ;; #share
			v ) path="$HOME/video/"             ;;
			x ) path="$HOME/.local/bin"         ;;
			* ) echo "Bookmark letter not found"; usage; return ;;
		esac
	fi
	shift;

	while getopts "f:d:" flag; do
		case "$flag" in
			f ) type="f"
				case ${OPTARG} in
					y ) yank="y" ; open=""  ; m="-m" ;;
					o ) yank=""  ; open="f" ; m="-m" ;;
					* ) usage; return ;;
				esac
				;;
			d ) type="d"
				case ${OPTARG} in
					y ) yank="y" ; open=""  ; m="-m" ;;
					o ) yank=""  ; open="d" ; m="+m" ;;
					* ) usage; return ;;
				esac
				;;
			* ) usage; return ;;
		esac
	done

	[ $# -gt 1 ] && echo "Only one flag allowed. Use -f or -d." && usage && return

	findcmd="find $path -type $type"
	fzfcmd="fzf $m \
		--bind='ctrl-r:reload(find $path -type $type)' \
		--bind='ctrl-a:toggle-all,ctrl-u:preview-half-page-up,ctrl-b:preview-half-page-down' \
		--preview 'fpreview {} ' \
		--preview-window 'border-left'
		"

	if [ -n "$yank" ]; then
		eval "$findcmd" | eval "$fzfcmd" | sed "s/^/\"/;s/$/\"/" | tr "\n" " " | wl-copy
	elif [ "$open" = "f" ]; then
		eval "$findcmd" | eval "$fzfcmd" | sed "s/\'/\\\'/g;s/\"/\\\"/g" | xargs -r -P3 -I{} setsid -f xdg-open "{}"
	elif [ "$open" = "d" ]; then
		res=$(eval "$findcmd" | eval "$fzfcmd")
		cd "$res" || return
		echo "cd \"$res\" " >> "$HISTFILE"
	fi
	unset findcmd fzfcmd path type yank open m res
}
